buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
        maven {
            name = 'sponge'
            url = 'https://repo.spongepowered.org/maven'
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
        classpath 'org.spongepowered:mixingradle:0.6-SNAPSHOT'
    }
}

plugins {
    id "org.jetbrains.kotlin.jvm" version "1.3.61"
}

apply plugin: 'net.minecraftforge.gradle.forge'
//Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'org.spongepowered.mixin'


wrapper {
    gradleVersion = "4.10.3"
}

file "build.properties" withReader {
    def prop = new Properties()
    prop.load(it)
    ext.config = new ConfigSlurper().parse prop
}

version = "${config.minecraft.version}-${config.timecore.version}"
group = "ru.timeconqueror" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "TimeCore"

sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

sourceSets {
    main {
        ext.refMap = "mixins.timecore.refmap.json"
    }
}

minecraft {
    version = "${config.forge.version}"
    runDir = "run"

    replaceIn "src/main/java/ru/timeconqueror/timecore/TimeCore.java"

    def versionArray = project.version.tokenize('-')
    replace "GRADLETOKEN_VERSION", versionArray.get(1)
    
    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = "stable_39"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}

repositories {
    maven {
        name = 'sponge'
        url = 'https://repo.spongepowered.org/maven'
    }
    mavenCentral()
}

configurations {
    extraLibs
}

dependencies {
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"
      
    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // the 'provided' configuration is for optional dependencies that exist at compile-time but might not at runtime.
    //provided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // the deobf configurations:  'deobfCompile' and 'deobfProvided' are the same as the normal compile and provided,
    // except that these dependencies get remapped to your current MCP mappings
    //deobfCompile 'com.mod-buildcraft:buildcraft:6.0.8:dev'
    //deobfProvided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html

//    noinspection GroovyAssignabilityCheck
    extraLibs('org.spongepowered:mixin:0.7.11-SNAPSHOT') {
        // Mixin includes a lot of dependencies that are too up-to-date
        exclude module: 'launchwrapper'
        exclude module: 'guava'
        exclude module: 'gson'
        exclude module: 'commons-io'
        exclude module: 'log4j-core'
    }

    extraLibs group: "org.jetbrains.kotlin", name: "kotlin-stdlib-jdk8"
    extraLibs group: "org.jetbrains.kotlin", name: "kotlin-reflect"
    extraLibs group: "org.jetbrains.kotlinx", name: "kotlinx-coroutines-jdk8", version: "1.3.3"

    configurations.compile.extendsFrom(configurations.extraLibs)

    implementation 'org.jetbrains:annotations:18.0.0'
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }

    rename("timecore_at.cfg", "META-INF/timecore_at.cfg")
}

jar {
    from {
        configurations.extraLibs.collect { it.isDirectory() ? it : zipTree(it) }
    }

    exclude "example"
    exclude "LICENSE.txt"
    exclude "test"

    manifest.attributes(
            "TweakClass": "org.spongepowered.asm.launch.MixinTweaker",
            "MixinConfigs": "mixins.timecore.json",
            "ForceLoadAsMod": true,
            "FMLCorePluginContainsFMLMod": "true",
            "FMLAT": "timecore_at.cfg"
    )
}

// Create deobf dev jars
task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'deobf'

    from {
        configurations.extraLibs.collect { it.isDirectory() ? it : zipTree(it) }
    }

    exclude "example"
    exclude "LICENSE.txt"
    exclude "test"

    manifest.attributes(
            "TweakClass": "org.spongepowered.asm.launch.MixinTweaker"
    )
}

// Create source attachment for dev jar
task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    classifier = 'sources'
}

artifacts {
    archives deobfJar
    archives sourcesJar
}
